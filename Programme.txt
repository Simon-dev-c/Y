Projet enorme reseau social : 
pour les icons : https://www.flaticon.com/
		 

Etape 1 :
	affichage (HTML, CSS).
Etape 2 : 
	Les fonctions de base (Js, php).
Etape 3 :
	Bases de donnees (sqlite, php).
Etape 4 : 
	Finaliser le projet. 


Organisation : 

7 avril – 13 avril :
affichage : 
- message classique
- écran d’accueil
- toutes les pages ( login,logout, identifiaction, profil,... )
- écran de recherche (discussions,..)

Pour HTML, CSS et JavaScript, voici la structure des fichiers à coder pour ton mini réseau social :

📂 Fichiers HTML / Front-end à coder
✅ 1. index.php → Page d’accueil (affichage des posts)
✅ 2. register.php → Inscription
✅ 3. login.php → Connexion
✅ 4. profile.php → Profil utilisateur
✅ 5. post.php → Affichage d’un post avec commentaires
✅ 6. edit_profile.php → Modifier son profil
💡 Remarque : On utilise .php au lieu de .html car on aura besoin d’afficher du contenu dynamique depuis la base de données.

📂 Fichiers CSS (Style & Design)
✅ 1. style.css → Fichier principal pour le design du site
✅ 2. responsive.css (optionnel) → Pour adapter le site au mobile
💡 Tu peux utiliser TailwindCSS ou Bootstrap pour gagner du temps.

📂 Fichiers JavaScript (Dynamique & Interactions)
✅ 1. script.js → Fichier JS principal
✅ 2. like.js → Pour gérer les likes avec AJAX
✅ 3. comment.js → Pour poster des commentaires sans recharger la page
✅ 4. profile.js → Pour modifier la bio et la photo de profil en direct
💡 Pourquoi utiliser JavaScript (AJAX) ?
    • Évite de recharger la page après un like ou un commentaire.
    • Améliore l’expérience utilisateur avec des animations.

📌 Organisation des dossiers
📂 Projet
├── 📁 css/ (Style)
│ ├── style.css
│ ├── responsive.css
├── 📁 js/ (Interactions)
│ ├── script.js
│ ├── like.js
│ ├── comment.js
├── 📁 uploads/ (Images de profil & posts)
├── 📁 php/ (Scripts backend)
│ ├── add_post.php
│ ├── add_comment.php
│ ├── like_post.php
├── index.php (Accueil)
├── login.php (Connexion)
├── register.php (Inscription)
├── profile.php (Profil utilisateur)
├── post.php (Un post avec commentaires)

📌 Conclusion
🔹 HTML : Environ 6 à 7 pages principales
🔹 CSS : 1 à 2 fichiers pour le style
🔹 JavaScript : 3 à 4 fichiers pour les interactions

